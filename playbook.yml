- hosts: target
  become: true
  tasks:

    - name: Disable automatic updates
      shell: apt-get remove -y unattended-upgrades
      register: apt_lock
      until: apt_lock.rc == 0
      retries: 5
      delay: 10
      
    
    - name: Check if dummy interface 'replay' exists
      shell: "ip link show replay"
      register: replay_interface_status
      ignore_errors: true
      changed_when: false

    - name: Create dummy network interface 'replay'
      command: ip link add replay type dummy
      become: true
      when: replay_interface_status.rc != 0

    - name: Disable network interface 'replay'
      command: ip link set dev replay down
      become: true
      when: replay_interface_status.rc != 0

    - name: Enable promiscuous mode for network interface 'replay'
      command: ip link set dev replay promisc on
      become: true
      when: replay_interface_status.rc != 0

    - name: Remove IP address from network interface 'replay'
      command: ip addr flush dev replay
      become: true
      when: replay_interface_status.rc != 0


########################################


    - name: Add forescout user
      user:
        name: forescout
        createhome: yes
        shell: /bin/bash
        
    - name: Generate SSH keypair for forescout user
      ansible.builtin.openssh_keypair:
        path: "/home/forescout/.ssh/id_rsa"
        owner: forescout
        mode: '0600'

    - name: Add new user to sudoers
      lineinfile:
        path: /etc/sudoers
        line: 'myuser ALL=(ALL) NOPASSWD: ALL'
        validate: 'visudo -cf %s'
        state: present
        backup: yes
    
    - name: Disable password-based login
      ansible.builtin.lineinfile:
        path: /etc/ssh/sshd_config
        regexp: '^(PasswordAuthentication|ChallengeResponseAuthentication)'
        line: '{{ item }} no'
        state: present
        backup: yes
      with_items:
        - PasswordAuthentication
        - ChallengeResponseAuthentication

    - name: Reload SSH service
      ansible.builtin.service:
        name: sshd
        state: reloaded

##################################################


    - name: Create directory if it does not exist
      file:
        path: /home/forescout
        state: directory
    - name: Copy PCAP file to forescout user's home folder
      copy:
        src:  "raw-auth-simple.zip"
        dest: "/home/forescout/raw-auth-simple.zip"
        owner: forescout
        group: forescout
    - name: Install unzip package
      become: true
      apt:
        name: unzip
        state: present

    - name: Unzip file on remote machine
      unarchive:
        src: /home/forescout/raw-auth-simple.zip
        dest: /home/forescout/
        remote_src: yes
        extra_opts: "-q"
        creates: /home/forescout/raw-auth-simple.pcap


#######################################################

    - name: Update package cache
      apt:
        update_cache: yes

    - name: Install tcpreplay and tcpdump
      become: yes
      apt:
        name:
        - tcpdump
        - tcpreplay
      
    - name: Bring up network interface 'replay'
      command: ip link set dev replay up
      become: true

    - name: Start tcpreplay process
      #become_user: forescout
      command: "sudo tcpreplay -i replay -t --loop=1000  /home/forescout/raw-auth-simple.pcap"
   

    - name: Start tcpdump process
      shell: "sudo -u forescout sudo tcpdump -i replay -w ~/capture.pcap"


################################################################
